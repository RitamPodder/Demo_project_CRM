<!DOCTYPE html>
<html lang="en"
      dir="ltr">

    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible"
              content="IE=edge">
        <meta name="viewport"
              content="width=device-width, initial-scale=1, shrink-to-fit=no">
              <title>Maze Soft Solution</title>
        <link rel="icon" href="favicon.png" type="image/gif" sizes="16x16">

        <!-- Prevent the demo from appearing in search engines -->
        <meta name="robots"
              content="noindex">

        <link href="https://fonts.googleapis.com/css?family=Lato:400,700%7CRoboto:400,500%7CExo+2:600&display=swap"
              rel="stylesheet">

        <!-- Preloader -->
        <link type="text/css"
              href="./public/vendor/spinkit.css"
              rel="stylesheet">

        <!-- Perfect Scrollbar -->
        <link type="text/css"
              href="./public/vendor/perfect-scrollbar.css"
              rel="stylesheet">

        <!-- Material Design Icons -->
        <link type="text/css"
              href="./public/css/material-icons.css"
              rel="stylesheet">

        <!-- Font Awesome Icons -->
        <link type="text/css"
              href="./public/css/fontawesome.css"
              rel="stylesheet">

        <!-- Preloader -->
        <link type="text/css"
              href="./public/css/preloader.css"
              rel="stylesheet">

        <!-- App CSS -->
        <link type="text/css"
              href="./public/css/app.css"
              rel="stylesheet">

      <style>
            @import url("https://fonts.googleapis.com/css?family=Bungee");

body {
  background: #1b1b1b;
  color: white;
  font-family: "Bungee", cursive;
  margin-top: 50px;
  text-align: center;
}
a {
  color: #2aa7cc;
  text-decoration: none;
}
a:hover {
  color: white;
}
svg {
  width: 50vw;
}
.lightblue {
  fill: #444;
}
.eye {
  cx: calc(115px + 30px * var(--mouse-x));
  cy: calc(50px + 30px * var(--mouse-y));
}
#eye-wrap {
  overflow: hidden;
}
.error-text {
  font-size: 120px;
}
.alarm {
  animation: alarmOn 0.5s infinite;
}

@keyframes alarmOn {
  to {
    fill: darkred;
  }
}

      </style>

    </head>

    <body style="background-color: #444;">
        

        <div class="preloader">
            <!--<div class="sk-chase">
                <div class="sk-chase-dot"></div>
                <div class="sk-chase-dot"></div>
                <div class="sk-chase-dot"></div>
                <div class="sk-chase-dot"></div>
                <div class="sk-chase-dot"></div>
                <div class="sk-chase-dot"></div>
            </div>-->

            <div class="sk-bounce">
                <div class="sk-bounce-dot"></div>
                <div class="sk-bounce-dot"></div>
            </div>

            <!-- More spinner examples at https://github.com/tobiasahlin/SpinKit/blob/master/examples.ejs -->
        </div>

        

            <!-- Header Layout Content -->
            <div class="mdk-header-layout__content page-content ">
                  <div class="pt-32pt pt-sm-64pt pb-32pt">
                        <div class="container page__container">
                              <div class="text-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" id="robot-error" viewBox="0 0 260 118.9">
                                          <defs>
                                                <clipPath id="white-clip"><circle id="white-eye" fill="#cacaca" cx="130" cy="65" r="20" /> </clipPath>
                                                <text id="text-s" class="error-text" y="106"> 403 </text>
                                          </defs>
                                          <path class="alarm" fill="#e62326" d="M120.9 19.6V9.1c0-5 4.1-9.1 9.1-9.1h0c5 0 9.1 4.1 9.1 9.1v10.6" />
                                          <use xlink:href="#text-s" x="-0.5px" y="-1px" fill="black"></use>
                                          <use xlink:href="#text-s" fill="#2b2b2b"></use>
                                          <g id="robot">
                                                <g id="eye-wrap">
                                                      <use xlink:href="#white-eye"></use>
                                                      <circle id="eyef" class="eye" clip-path="url(#white-clip)" fill="#000" stroke="#2aa7cc" stroke-width="2" stroke-miterlimit="10" cx="130" cy="65" r="11" />
                                                      <ellipse id="white-eye" fill="#2b2b2b" cx="130" cy="40" rx="18" ry="12" />
                                                </g>
                                                <circle class="lightblue" cx="105" cy="32" r="2.5" id="tornillo" />
                                                <use xlink:href="#tornillo" x="50"></use>
                                                <use xlink:href="#tornillo" x="50" y="60"></use>
                                                <use xlink:href="#tornillo" y="60"></use>
                                          </g>
                                    </svg>
                                    <h1 style="color: white;">NOT THIS TIME. ACCESS FORBIDDEN!!</h1>
                                    <h2 style="color: white;">Go <a style="color: tomato; cursor: pointer;" onclick="window.location='/logout';">Home!</a></h2>
                              </div>
                        </div>
                  </div>
            </div>
            <!-- // END Header Layout Content -->
            
        </div>
        <!-- // END Header Layout -->

        </body>
        <script>
              var root = document.documentElement;
var eyef = document.getElementById('eyef');
var cx = document.getElementById("eyef").getAttribute("cx");
var cy = document.getElementById("eyef").getAttribute("cy");

document.addEventListener("mousemove", evt => {
  let x = evt.clientX / innerWidth;
  let y = evt.clientY / innerHeight;

  root.style.setProperty("--mouse-x", x);
  root.style.setProperty("--mouse-y", y);
  
  cx = 115 + 30 * x;
  cy = 50 + 30 * y;
  eyef.setAttribute("cx", cx);
  eyef.setAttribute("cy", cy);
  
});

document.addEventListener("touchmove", touchHandler => {
  let x = touchHandler.touches[0].clientX / innerWidth;
  let y = touchHandler.touches[0].clientY / innerHeight;

  root.style.setProperty("--mouse-x", x);
  root.style.setProperty("--mouse-y", y);
});
        </script>
        <!-- jQuery -->
        <script src="./public/vendor/jquery.min.js"></script>

        <!-- Bootstrap -->
        <script src="./public/vendor/popper.min.js"></script>
        <script src="./public/vendor/bootstrap.min.js"></script>

        <!-- Perfect Scrollbar -->
        <script src="./public/vendor/perfect-scrollbar.min.js"></script>

        <!-- DOM Factory -->
        <script src="./public/vendor/dom-factory.js"></script>

        <!-- MDK -->
        <script src="./public/vendor/material-design-kit.js"></script>

        <!-- App JS -->
        <script src="./public/js/app.js"></script>

        <!-- Preloader -->
        <script src="./public/js/preloader.js"></script>
</html>
